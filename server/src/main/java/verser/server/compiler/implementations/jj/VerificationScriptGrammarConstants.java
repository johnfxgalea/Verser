/* Generated By:JJTree&JavaCC: Do not edit this line. VerificationScriptGrammarConstants.java */
package verser.server.compiler.implementations.jj;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface VerificationScriptGrammarConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SERVICE = 6;
  /** RegularExpression Id. */
  int BY = 7;
  /** RegularExpression Id. */
  int WHILE = 8;
  /** RegularExpression Id. */
  int IF = 9;
  /** RegularExpression Id. */
  int ELSE = 10;
  /** RegularExpression Id. */
  int TYPE = 11;
  /** RegularExpression Id. */
  int VERIFICATION = 12;
  /** RegularExpression Id. */
  int FLOW = 13;
  /** RegularExpression Id. */
  int RELATIONOP = 14;
  /** RegularExpression Id. */
  int LOGICALOP = 15;
  /** RegularExpression Id. */
  int ADDITIVEOP = 16;
  /** RegularExpression Id. */
  int ASSIGNMENTOP = 17;
  /** RegularExpression Id. */
  int UNDERSCORE = 18;
  /** RegularExpression Id. */
  int OPENBRACKET = 19;
  /** RegularExpression Id. */
  int CLOSEBRACKET = 20;
  /** RegularExpression Id. */
  int OPENCBRACKET = 21;
  /** RegularExpression Id. */
  int CLOSECBRACKET = 22;
  /** RegularExpression Id. */
  int OPENSQBRACKET = 23;
  /** RegularExpression Id. */
  int CLOSESQBRACKET = 24;
  /** RegularExpression Id. */
  int COMMA = 25;
  /** RegularExpression Id. */
  int COLAN = 26;
  /** RegularExpression Id. */
  int VOID = 27;
  /** RegularExpression Id. */
  int SEMICOLON = 28;
  /** RegularExpression Id. */
  int QUOTE = 29;
  /** RegularExpression Id. */
  int STRING = 30;
  /** RegularExpression Id. */
  int INTEGER = 31;
  /** RegularExpression Id. */
  int WORD = 32;
  /** RegularExpression Id. */
  int LETTER = 33;
  /** RegularExpression Id. */
  int DIGIT = 34;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "<token of kind 5>",
    "\"service\"",
    "\"by\"",
    "\"while\"",
    "\"if\"",
    "\"else\"",
    "<TYPE>",
    "\"verification\"",
    "\"<-\"",
    "<RELATIONOP>",
    "<LOGICALOP>",
    "<ADDITIVEOP>",
    "\"=\"",
    "\"_\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\",\"",
    "\":\"",
    "\"void\"",
    "\";\"",
    "\"\\\"\"",
    "<STRING>",
    "<INTEGER>",
    "<WORD>",
    "<LETTER>",
    "<DIGIT>",
  };

}
